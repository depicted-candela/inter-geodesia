# Generated by Django 4.2.8 on 2023-12-07 02:57

from django.conf import settings
import django.contrib.gis.db.models.fields
import django.contrib.gis.geos.point
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GravimetriaT',
            fields=[
                ('id', models.BigAutoField(help_text='Identificador del punto', primary_key=True, serialize=False)),
                ('grav', models.DecimalField(decimal_places=3, help_text='Gravedad en terreno del punto', max_digits=9)),
                ('h_t', models.DecimalField(decimal_places=3, help_text='Altura geométrica h del punto', max_digits=7)),
                ('geom', django.contrib.gis.db.models.fields.PointField(default=django.contrib.gis.geos.point.Point(0.0, 0.0), help_text='Geometría del punto', srid=4326)),
                ('xi', models.DecimalField(decimal_places=12, default=-999.99, help_text='Altura anómala según modelo geoidal global', max_digits=15)),
                ('N', models.DecimalField(decimal_places=12, default=-999.99, help_text='Ondulación geoidal según modelo geoidal global', max_digits=15)),
                ('obsv', models.CharField(help_text='Observaciones del punto', max_length=200)),
                ('tipo', models.CharField(choices=[('relativa', 'Relativa'), ('absoluta', 'Absoluta')], help_text='El tipo de medición, ya sea absoluta o relativa', max_length=20)),
                ('fecha', models.DateField(null=True)),
            ],
            options={
                'verbose_name': 'Gravimetría',
                'verbose_name_plural': 'Gravimetrías',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Nivelacion',
            fields=[
                ('id', models.BigAutoField(help_text='Identificador del punto', primary_key=True, serialize=False)),
                ('t_cota', models.CharField(choices=[('in-situ', 'Medida en campo'), ('calculada_global', 'Calculada con modelo geoidal global y SRTM')], default='desc', help_text='Tipo de medición para altura sobre el nivel del mar', max_length=20)),
                ('cota', models.DecimalField(decimal_places=3, help_text='Altura sobre el nivel del mar', max_digits=7)),
                ('h_t', models.DecimalField(decimal_places=3, help_text='Altura geométrica h del punto', max_digits=7)),
                ('geom', django.contrib.gis.db.models.fields.PointField(help_text='Geometría del punto', srid=4326)),
                ('xi', models.DecimalField(decimal_places=12, default=-999.99, help_text='Altura anómala según modelo geoidal global', max_digits=15)),
                ('N', models.DecimalField(decimal_places=12, default=-999.99, help_text='Ondulación geoidal según modelo geoidal global', max_digits=15)),
                ('obsv', models.CharField(help_text='Observaciones del punto', max_length=200)),
                ('fecha', models.DateField(null=True)),
            ],
            options={
                'verbose_name': 'Nivelación',
                'verbose_name_plural': 'Nivelaciones',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Proyecto',
            fields=[
                ('id', models.AutoField(help_text='Identificador del punto', primary_key=True, serialize=False)),
                ('exact', models.DecimalField(decimal_places=3, help_text='Exactitud del proyecto', max_digits=4)),
                ('nombre', models.CharField(help_text='Nombre del proyecto', max_length=100)),
                ('detalle', models.TextField(help_text='Observaciones proveídas por quien sube el proyecto a la base de datos')),
                ('fuente', models.CharField(choices=[('desc', 'Desconocido'), ('bgi', 'Bureau Gravimetrique International'), ('ecopetrol', 'Ecopetrol'), ('sgc', 'Servicio Geológico Colombiano')], default='desc', max_length=20)),
                ('elip', models.CharField(choices=[('7019', 'GRS80'), ('4326', 'WGS84')], default='7019', help_text='Elipsoide de las coordenadas', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Proyectos',
            fields=[
                ('id', models.AutoField(help_text='Identificador del proyecto', primary_key=True, serialize=False)),
            ],
            options={
                'verbose_name': 'Proyecto',
                'verbose_name_plural': 'Proyectos',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='ProyectoAereo',
            fields=[
                ('proyecto_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='estandarizar.proyecto')),
                ('org', models.CharField(choices=[('carson-h', 'Carson Hellicoperts')], help_text='Organización encargada del proyecto', max_length=30)),
                ('archivo', models.FileField(help_text='Archivo del que provienen los datos', upload_to='archivos/aerogravimetria')),
                ('reporte', models.FileField(help_text='Reporte que explica los datos', upload_to='reportes/aerogravimetria')),
            ],
            options={
                'verbose_name': 'Proyecto aéreo',
                'verbose_name_plural': 'Proyectos aéreos',
                'ordering': ('-id',),
            },
            bases=('estandarizar.proyecto',),
        ),
        migrations.CreateModel(
            name='ProyectoOceanico',
            fields=[
                ('proyecto_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='estandarizar.proyecto')),
                ('org', models.CharField(choices=[('d', 'Desconocido')], help_text='Organización encargada del proyecto', max_length=30)),
                ('archivo', models.FileField(help_text='Archivo del que provienen los datos', upload_to='archivos/batigravimetria')),
                ('reporte', models.FileField(help_text='Reporte que explica los datos', upload_to='reportes/batigravimetria')),
            ],
            options={
                'verbose_name': 'Proyecto oceánico',
                'verbose_name_plural': 'Proyectos oceánicos',
                'ordering': ('-id',),
            },
            bases=('estandarizar.proyecto',),
        ),
        migrations.CreateModel(
            name='ProyectoTerrestre',
            fields=[
                ('proyecto_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='estandarizar.proyecto')),
                ('org', models.CharField(choices=[('d', 'Desconocido')], help_text='Organización encargada del proyecto', max_length=30)),
                ('archivo', models.FileField(help_text='Archivo del que provienen los datos', upload_to='archivos/gravimetria')),
                ('reporte', models.FileField(help_text='Reporte que explica los datos', upload_to='reportes/gravimetria')),
            ],
            options={
                'verbose_name': 'Proyecto terrestre',
                'verbose_name_plural': 'Proyectos terrestres',
                'ordering': ('-id',),
            },
            bases=('estandarizar.proyecto',),
        ),
        migrations.AddField(
            model_name='proyecto',
            name='pry_id',
            field=models.ForeignKey(help_text='Proyecto general relacionado', on_delete=django.db.models.deletion.CASCADE, to='estandarizar.proyectos'),
        ),
        migrations.AddField(
            model_name='proyecto',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='proyecto_estandarizado', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Linea',
            fields=[
                ('id', models.AutoField(help_text='Identificador de la línea', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('pry_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='estandarizar.proyectos')),
            ],
            options={
                'verbose_name': 'Línea',
                'verbose_name_plural': 'Líneas',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='Correcciones',
            fields=[
                ('id', models.AutoField(help_text='Identificador de la correción para la línea', primary_key=True, serialize=False)),
                ('deriva', models.BooleanField(help_text='Si la línea tiene corrección por deriva')),
                ('marea', models.BooleanField(help_text='Si la línea tiene corrección por marea')),
                ('linea', models.ForeignKey(help_text='Línea relacionada', on_delete=django.db.models.deletion.CASCADE, to='estandarizar.linea')),
            ],
        ),
        migrations.CreateModel(
            name='DatoTerrestre',
            fields=[
                ('id', models.BigAutoField(help_text='Identificador del punto', primary_key=True, serialize=False)),
                ('or_id', models.CharField(help_text='Nomenclatura original del punto físico', max_length=30)),
                ('grav', models.ForeignKey(help_text='Gravimetría del punto', on_delete=django.db.models.deletion.CASCADE, to='estandarizar.gravimetriat')),
                ('linea', models.ForeignKey(help_text='Línea asociada al punto', on_delete=django.db.models.deletion.CASCADE, to='estandarizar.linea')),
                ('nivl', models.ForeignKey(help_text='Nivelación geodésica del punto', on_delete=django.db.models.deletion.CASCADE, to='estandarizar.nivelacion')),
                ('pry', models.ForeignKey(help_text='Proyecto terrestre asociado', on_delete=django.db.models.deletion.CASCADE, to='estandarizar.proyectoterrestre')),
            ],
            options={
                'verbose_name': 'Dato gravimétrico terrestre',
                'verbose_name_plural': 'Datos gravimétricos terrestres',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='DatoOceanico',
            fields=[
                ('id', models.BigAutoField(help_text='Identificador del punto', primary_key=True, serialize=False)),
                ('geom', django.contrib.gis.db.models.fields.PointField(help_text='Geometría del punto', srid=4326)),
                ('fecha', models.DateField(null=True)),
                ('pry', models.ForeignKey(help_text='Proyecto oceánico asociado', on_delete=django.db.models.deletion.CASCADE, to='estandarizar.proyectooceanico')),
            ],
            options={
                'verbose_name': 'Dato bati-gravimétrico',
                'verbose_name_plural': 'Datos bati-gravimétricos',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='DatoAereo',
            fields=[
                ('id', models.BigAutoField(help_text='Identificador del punto', primary_key=True, serialize=False)),
                ('h_cru', models.DecimalField(decimal_places=3, help_text='altitud geométrica cruda del avión (h)', max_digits=7)),
                ('h_adj', models.DecimalField(decimal_places=3, help_text='altitud geométrica ajustada del avión (h)', max_digits=7)),
                ('grav_h', models.DecimalField(decimal_places=3, help_text='gravedad observada en altitud geométrica del avión (h)', max_digits=9)),
                ('a_a_li', models.DecimalField(decimal_places=2, help_text='Anomalía de aire libre', max_digits=6)),
                ('radar', models.DecimalField(decimal_places=3, help_text='Altimetría de radar', max_digits=9)),
                ('or_id', models.IntegerField(help_text='Identificador de punto original del vuelo')),
                ('geom', django.contrib.gis.db.models.fields.PointField(help_text='Geometría del punto', srid=4326)),
                ('xi', models.DecimalField(decimal_places=12, default=-999.99999, help_text='Altura anómala según modelo geoidal global', max_digits=15)),
                ('fecha', models.DateField(null=True)),
                ('linea', models.ForeignKey(help_text='Línea de vuelo relacionada al punto', on_delete=django.db.models.deletion.CASCADE, to='estandarizar.linea')),
                ('pry', models.ForeignKey(help_text='Proyecto aéreo asociado', on_delete=django.db.models.deletion.CASCADE, to='estandarizar.proyectoaereo')),
            ],
            options={
                'verbose_name': 'Dato aero-gravimétrico',
                'verbose_name_plural': 'Datos aero-gravimétricos',
                'ordering': ('-id',),
            },
        ),
    ]
